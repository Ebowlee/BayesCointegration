{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(python:*)",
      "Bash(git add:*)",
      "Bash(del test_refactor.py simple_test.py)",
      "Bash(rm:*)",
      "Bash(git log:*)",
      "Bash(git commit:*)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(cp:*)",
      "Bash(ls:*)",
      "Bash(mv:*)",
      "Bash(git clean:*)",
      "Bash(git push:*)",
      "Bash(lean backtest:*)",
      "WebFetch(domain:www.quantconnect.com)",
      "Bash(mkdir:*)",
      "Bash(del test_integration.py test_integration_simple.py)",
      "Bash(del:*)",
      "Bash(git rm:*)",
      "Bash(git merge:*)",
      "Bash(git stash:*)",
      "Bash(git checkout:*)",
      "Bash(git pull:*)",
      "WebSearch",
      "mcp__quantconnect__read_file",
      "mcp__quantconnect__update_file_contents",
      "mcp__quantconnect__create_file",
      "mcp__quantconnect__create_compile",
      "mcp__quantconnect__read_compile",
      "mcp__quantconnect__read_backtest",
      "mcp__quantconnect__create_backtest",
      "mcp__quantconnect__read_backtest_orders",
      "mcp__quantconnect__list_backtests",
      "mcp__quantconnect__list_projects",
      "Bash(lean cloud backtest:*)",
      "Bash(lean cloud pull:*)",
      "Bash(cat:*)",
      "Bash(awk:*)",
      "Bash(find:*)",
      "Bash(git tag:*)",
      "Bash(git branch:*)",
      "Bash(git fetch:*)",
      "Bash(dir:*)",
      "Bash(iconv:*)",
      "Bash(if [ -d \".Trash-0\" ])",
      "Bash(then rm -rf .Trash-0)",
      "Bash(else echo \".Trash-0目录不存在\")",
      "Bash(fi)",
      "Bash(if [ -d \".ipynb_checkpoints\" ])",
      "Bash(then rm -rf .ipynb_checkpoints)",
      "Bash(else echo \".ipynb_checkpoints目录不存在\")",
      "Bash(git mv src/RiskManagement src/temp_risk)",
      "Bash(git mv src/temp_risk src/risk)",
      "Bash(git mv src/risk/PortfolioBaseRule.py src/risk/RiskBaseRule.py)",
      "Bash(git mv:*)",
      "Bash(powershell:*)",
      "Bash(more:*)",
      "Bash(sed:*)",
      "Bash(if exist tests rmdir /s /q tests)",
      "Read(//c/Users/Lybst/OneDrive/桌面/MyLeanProject/**)",
      "Bash(then echo \"✓ 所有__pycache__已清理\")",
      "Bash(else echo \"❌ 仍有残留:\")",
      "Bash(conda info:*)",
      "Bash(gcc --version:*)",
      "Bash(g++:*)",
      "Bash(pip show:*)",
      "Bash(test:*)",
      "Bash(/c/msys64/mingw64/bin/g++.exe:*)",
      "Bash(pacman -Ss:*)",
      "Bash(where python)",
      "Bash(C:msys64usrbinpacman.exe -Ss openblas)",
      "Bash(/c/msys64/usr/bin/pacman.exe:*)",
      "Read(//c/msys64/mingw64/include//**)",
      "Read(//c/msys64/mingw64/lib//**)",
      "Read(//c/msys64/mingw64/bin//**)",
      "Bash(echo:*)",
      "Bash(timeout:*)",
      "Bash(/bashes)",
      "Bash(for commit in 7560e07 7fac185 a81b9ec acb1b62)",
      "Bash(do echo \"=== Commit: $commit ===\")",
      "Bash(done)"
    ],
    "deny": []
  },
  "outputStyle": "Explanatory"
}
